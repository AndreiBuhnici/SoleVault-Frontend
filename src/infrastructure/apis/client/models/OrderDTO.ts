/* tslint:disable */
/* eslint-disable */
/**
 * SoleVault
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrderItemDTO } from './OrderItemDTO';
import {
    OrderItemDTOFromJSON,
    OrderItemDTOFromJSONTyped,
    OrderItemDTOToJSON,
} from './OrderItemDTO';

/**
 * 
 * @export
 * @interface OrderDTO
 */
export interface OrderDTO {
    /**
     * 
     * @type {string}
     * @memberof OrderDTO
     */
    id?: string;
    /**
     * 
     * @type {Array<OrderItemDTO>}
     * @memberof OrderDTO
     */
    orderItems?: Array<OrderItemDTO> | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderDTO
     */
    orderDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderDTO
     */
    deliveryDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof OrderDTO
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderDTO
     */
    shippingAddress?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OrderDTO
     */
    status?: string | null;
    /**
     * 
     * @type {number}
     * @memberof OrderDTO
     */
    total?: number;
    /**
     * 
     * @type {Date}
     * @memberof OrderDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderDTO
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the OrderDTO interface.
 */
export function instanceOfOrderDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderDTOFromJSON(json: any): OrderDTO {
    return OrderDTOFromJSONTyped(json, false);
}

export function OrderDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'orderItems': !exists(json, 'orderItems') ? undefined : (json['orderItems'] === null ? null : (json['orderItems'] as Array<any>).map(OrderItemDTOFromJSON)),
        'orderDate': !exists(json, 'orderDate') ? undefined : (new Date(json['orderDate'])),
        'deliveryDate': !exists(json, 'deliveryDate') ? undefined : (new Date(json['deliveryDate'])),
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
        'shippingAddress': !exists(json, 'shippingAddress') ? undefined : json['shippingAddress'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'total': !exists(json, 'total') ? undefined : json['total'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function OrderDTOToJSON(value?: OrderDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'orderItems': value.orderItems === undefined ? undefined : (value.orderItems === null ? null : (value.orderItems as Array<any>).map(OrderItemDTOToJSON)),
        'orderDate': value.orderDate === undefined ? undefined : (value.orderDate.toISOString()),
        'deliveryDate': value.deliveryDate === undefined ? undefined : (value.deliveryDate.toISOString()),
        'phoneNumber': value.phoneNumber,
        'shippingAddress': value.shippingAddress,
        'status': value.status,
        'total': value.total,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

