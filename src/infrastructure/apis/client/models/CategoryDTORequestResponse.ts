/* tslint:disable */
/* eslint-disable */
/**
 * SoleVault
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CategoryDTO } from './CategoryDTO';
import {
    CategoryDTOFromJSON,
    CategoryDTOFromJSONTyped,
    CategoryDTOToJSON,
} from './CategoryDTO';
import type { ErrorMessage } from './ErrorMessage';
import {
    ErrorMessageFromJSON,
    ErrorMessageFromJSONTyped,
    ErrorMessageToJSON,
} from './ErrorMessage';

/**
 * 
 * @export
 * @interface CategoryDTORequestResponse
 */
export interface CategoryDTORequestResponse {
    /**
     * 
     * @type {CategoryDTO}
     * @memberof CategoryDTORequestResponse
     */
    response?: CategoryDTO;
    /**
     * 
     * @type {ErrorMessage}
     * @memberof CategoryDTORequestResponse
     */
    errorMessage?: ErrorMessage;
}

/**
 * Check if a given object implements the CategoryDTORequestResponse interface.
 */
export function instanceOfCategoryDTORequestResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CategoryDTORequestResponseFromJSON(json: any): CategoryDTORequestResponse {
    return CategoryDTORequestResponseFromJSONTyped(json, false);
}

export function CategoryDTORequestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategoryDTORequestResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'response': !exists(json, 'response') ? undefined : CategoryDTOFromJSON(json['response']),
        'errorMessage': !exists(json, 'errorMessage') ? undefined : ErrorMessageFromJSON(json['errorMessage']),
    };
}

export function CategoryDTORequestResponseToJSON(value?: CategoryDTORequestResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'response': CategoryDTOToJSON(value.response),
        'errorMessage': ErrorMessageToJSON(value.errorMessage),
    };
}

