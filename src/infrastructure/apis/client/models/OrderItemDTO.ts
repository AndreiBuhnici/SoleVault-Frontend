/* tslint:disable */
/* eslint-disable */
/**
 * SoleVault
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductDTO } from './ProductDTO';
import {
    ProductDTOFromJSON,
    ProductDTOFromJSONTyped,
    ProductDTOToJSON,
} from './ProductDTO';

/**
 * 
 * @export
 * @interface OrderItemDTO
 */
export interface OrderItemDTO {
    /**
     * 
     * @type {string}
     * @memberof OrderItemDTO
     */
    id?: string;
    /**
     * 
     * @type {ProductDTO}
     * @memberof OrderItemDTO
     */
    product?: ProductDTO;
    /**
     * 
     * @type {number}
     * @memberof OrderItemDTO
     */
    quantity?: number;
    /**
     * 
     * @type {number}
     * @memberof OrderItemDTO
     */
    price?: number;
    /**
     * 
     * @type {Date}
     * @memberof OrderItemDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderItemDTO
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the OrderItemDTO interface.
 */
export function instanceOfOrderItemDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderItemDTOFromJSON(json: any): OrderItemDTO {
    return OrderItemDTOFromJSONTyped(json, false);
}

export function OrderItemDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderItemDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'product': !exists(json, 'product') ? undefined : ProductDTOFromJSON(json['product']),
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function OrderItemDTOToJSON(value?: OrderItemDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'product': ProductDTOToJSON(value.product),
        'quantity': value.quantity,
        'price': value.price,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

